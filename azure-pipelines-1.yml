# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\$(buildConfiguration)\*\*ZirconSound*.dll
      **\$(buildConfiguration)\*\*ZirconSound.exe
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: ado-discord-webhook@1
  inputs:
    channelId: '892075724847079494'
    webhookKey: 'S3CPGp0vqpF-azkSH-LSxjUf47h3LrTliK7M7QZlJV2GacMn1sQe4OVvpqrItEVd1sBf'
    name: 'Azure DevOps'
    avatar: 'https://i2.wp.com/elanderson.net/wp-content/uploads/2020/02/AzureDevOpsPipelinesIcon.png?resize=300%2C300&ssl=1'
    messageType: 'embeds'
    embeds: |
      [{
            "title": "Azure Build Pipeline",
            "description": "Build [$(Build.BuildNumber)](https://dev.azure.com/ZirconCloud/ZirconSound/builduri=$(Build.BuildUri)) $(Agent.JobStatus)",
            "fields": [
              {
                "name": "Project",
                "value": "$(Build.Repository.Name)"
                "inline": true
              },
              {
                "name": "Id",
                "value": "$(Build.BuildId)",
                "inline": true
              }
            ]
          }]